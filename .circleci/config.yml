version: 2.1

jobs:
  build:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Install Python deps in a venv
          command: |
            python3 -m venv venv;
            . venv/bin/activate;
            pip install -r requirements.txt;
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
  test:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Run tests and save it as artifact
          command: |
            . venv/bin/activate;
            mkdir test-reports;
            pytest > test-reports/artifact-1;
      - store_artifacts:
          path: test-reports/
          destination: python_app
      - store_test_results:
          path: test-reports/
  containerization:
    docker:
      - image: cimg/go:1.17
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout

      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true

      - run: |
          TAG=$CIRCLE_SHA1
          docker build -t oc_lettings_image .
          docker tag oc_lettings_image:latest $DOCKERHUB_USERNAME/$REPO_NAME:$TAG
          echo $DOCKER_PASS | docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
          docker push $DOCKERHUB_USERNAME/$REPO_NAME:$TAG

workflows:
  build_test_containerization:
    jobs:
      - build
      - test:
          requires:
          - build
      - containerization:
          context:
            - OC-P13
          filters:
              branches:
                only: main
          requires:
            - build
            - test
            
