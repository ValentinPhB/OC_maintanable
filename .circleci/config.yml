version: 2.1

orbs: 
  heroku: circleci/heroku@1.2.6

jobs:
  build:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Install Python deps in a venv
          command: |
            python3 -m venv venv;
            . venv/bin/activate;
            pip install -r requirements.txt;
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
  tests:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Run flake8
          command: |
            . venv/bin/activate;
            flake8;
      - run:
          name: Run pytest and save it as artifact
          command: |
            . venv/bin/activate;
            mkdir tests-reports;
            pytest > tests-reports/pytest;
      - store_artifacts:
          path: tests-reports/
          destination: oc_lettings_site 
      - store_test_results:
          path: tests-reports/
  containerization:
    docker:
      - image: cimg/go:1.17
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout

      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true

      - run:  
          name: Build dockerfile, Tag with CIRCLE_SHA1 and push to personnal DockerHub
          command: |
            TAG=$CIRCLE_SHA1
            docker build -t oc_lettings_image .
            docker tag oc_lettings_image:latest $DOCKERHUB_USERNAME/$REPO_NAME:$TAG
            echo $DOCKER_PASS | docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
            docker push $DOCKERHUB_USERNAME/$REPO_NAME:$TAG

workflows:
  build_tests_containerization_and_deploy:
    jobs:
      - build
      - tests:
          requires:
          - build
      - containerization:
          context:
            - OC-P13
          filters:
              branches:
                only: main
          requires:
            - tests
      - heroku/deploy-via-git
          context:
                - OC-P13
              filters:
                  branches:
                    only: main
              requires:
                - containerization
            